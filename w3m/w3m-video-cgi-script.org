#+STARTUP: content
* w3m video.cgi script

w3m cgi script to open links with mpv

** cgi-bin setup

create a cgi-bin directory in your home w3m directory if it doesnt exist

#+begin_src sh
mkdir -p ~/.w3m/cgi-bin
#+end_src

edit your w3m config file and set up the cgi-bin directory

#+begin_src sh
vi ~/.w3m/config
#+end_src

change the cgi-bin line and add the path the cgi-bin directories on your system

#+begin_src conf
cgi_bin ~/.w3m/cgi-bin:/usr/lib/w3m/cgi-bin
#+end_src

alternativaly you can use sed to edit the ~/.w3m/config file

#+begin_src sh
sed -i 's@cgi_bin.*@cgi_bin ~/.w3m/cgi-bin:/usr/lib/w3m/cgi-bin@g' ~/.w3m/config
#+end_src

** siteconf

create the ~/.w3m/siteconf file

#+begin_src sh
touch ~/.w3m/siteconf
#+end_src

edit the ~/.w3m/siteconf file and add the following code

#+begin_src conf
# youtube open video links with mpv
url "https://www.youtube.com/watch?" exact
substitute_url "file:/cgi-bin/video.cgi?"

# bbc iplayer open video links with mpv
url "https://www.bbc.co.uk/iplayer/episode"
substitute_url "file:/cgi-bin/video.cgi?"

# dailymotion open video links with mpv
url "https://www.dailymotion.com/video"
substitute_url "file:/cgi-bin/video.cgi?"
#+end_src

** video.cgi

create a file called video.cgi with the following code

#+begin_src conf
#!/bin/sh

# video.cgi

# current link under cursor in w3m
url="${W3M_CURRENT_LINK}"   

# if the current link contains a url pipe it into grep,
# remove the google redirect and decode the url
# if the current link is empty set the url to the page url
if [ ! -z "${url}" ]; then
   result=$(echo "${url}" | \
            grep -oP '(?<=google.com\/url\?q=)[^&]*(?=&)' \
            | python3 -c "import sys; from urllib.parse import unquote; print(unquote(sys.stdin.read()));")
   [ ! -z "${result}" ] && url="${result}" || url="${url}"
else
    url="${W3M_URL}"
fi

# queue the video with taskpooler and play the url with mpv on the current display
#tsp mpv --no-terminal "${url}"

# queue the video with taskpooler and play the url with mpv full screen on the second display
tsp mpv --fs --screen=1 "${url}"

# remove http prefix for notify-send to fix issue with (U) in the notification title
title=$(echo "${url}" | sed -e 's#https\?://\([www.]*\)##g')
notify-send "Queuing â™«" "${title}"

# delete previous buffer
printf "%s\r\n" "W3m-control: BACK";
#+end_src

copy the video.cgi script to the ~/.w3m/cgi-bin directory

#+begin_src sh
cp video.cgi ~/.w3m/cgi-bin
#+end_src

make the script executable

#+begin_src sh
chmod +x ~/.w3m/cgi-bin/video.cgi
#+end_src
