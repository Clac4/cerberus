#+STARTUP: content
* apt-cache

The apt package manager works on a local cache of package metadata. The metadata usually consists information like package name, version, description, dependencies, its repository and developers. With the apt-cache command, you can query this local APT cache and get relevant information.

You can search for the availability of a package, its version number, its dependencies among other things. I’ll show you how to use the apt-cache command with examples.

The location of APT cache is /var/lib/apt/lists/ directory. Which repository metadata to cache depends on the repositories added in your source list in the /etc/apt/sources.list file and additional repository files located in ls /etc/apt/sources.list.d directory.

Surprisingly, apt-cache doesn’t clear the APT cache. For that you’ll have to use the apt-get clean command.

** Search for packages

The most common use of apt-cache command is for finding package. You can use a regex pattern to search for a package in the local APT cache.

#+begin_src sh
apt-cache search package_name
#+end_src

By default, it looks for the search term in both the name and description of the package. It shows the matching package along with its short description in alphabetical order.

You can narrow down your search to look for the search term in package names only.

#+begin_src sh
apt-cache search --names-only package_name
#+end_src

If you want complete details of all the matched packages, you may use the --full flag. It can also be used with --names-only flag.

** Get detailed package information

If you know the exact package name (or if you have manged to find it with the search), you can get the detailed metadata information on the package.

#+begin_src sh
apt-cache show package_name
#+end_src

You can see all kind of details in the package metadata like name, version, developer, maintainer, repository, short and long description, package size and even checksum.

There is another option showpkg that displays information about the package name, version and its forward and reverse dependencies.

#+begin_src sh
apt-cache showpkg package_name
#+end_src

** apt-cache policy

This is one of the rarely used option of apt-cache command. The policy options helps you debug the issue related to the preference file.

If you specify the package name, it will show whether the package is installed, which version is available from which repository and its priority.

By default, each installed package version has a priority of 100 and a non-installed package has a priority of 500. The same package may have more than one version with a different priority. APT installs the version with higher priority unless the installed version is newer.

If this doesn’t make sense, it’s okay. It will be extremely rare for a regular Linux user to dwell this deep into package management.

** Check dependencies and reverse dependencies of a package

You can check the dependencies of a package before (or even after) installing it. It also shows all the possible packages that can fulfill the dependency.

#+begin_src sh
apt-cache depends package
#+end_src

+ cowsay

#+begin_src sh
apt-cache depends cowsay
#+end_src

You may also check which packages are dependent on a certain package by checking the reverse dependencies with apt-cache.

#+begin_src sh
apt-cache rdepends cowsay
#+end_src

** Check unmet dependencies

You may get troubled with unmet dependencies issue in Ubuntu or other Linux. The apt-cache command provides option to check all the unmet dependencies of various available packages on your system.

#+begin_src sh
apt-cache unmet
#+end_src
