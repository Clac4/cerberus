# network interface
ext_if="bge0"

# bogon networks
broken="224.0.0.22 127.0.0.0/8, 192.168.0.0/16, 172.16.0.0/12, \
        10.0.0.0/8, 169.254.0.0/16, 192.0.2.0/24, \
        192.0.2.0/24, 198.51.100.0/24, 203.0.113.0/24, \
        169.254.0.0/16, 0.0.0.0/8, 240.0.0.0/4, 255.255.255.255/32"

# Macros to define the set of TCP and UDP ports to open.
# Add additional ports or ranges separated by commas.
tcp_services = "{ ntp, 6881, 6882, 22000 }"
udp_services = "{ ntp, 21025 }"

# If you block all ICMP requests you will break things like path MTU
# discovery. These macros define allowed ICMP types. 
icmp_types = "{ echoreq, unreach }"

# Modulate the initial sequence number of TCP packets.
# Broken operating systems sometimes don't randomize this number,
# making it guessable.
tcp_state="flags S/SA keep state"
udp_state="keep state"

# Don't send rejections. Just drop.
# dont block localhost
set block-policy drop
set skip on lo0

# scrub
scrub in all
scrub in all fragment reassemble no-df max-mss 1440

# block ipv6
block return out quick inet6 all
block in quick inet6 all

# block bogon networks
block in quick from { $broken urpf-failed no-route } to any
block in all

# This is a desktop so be permissive in allowing outgoing connections.
pass out quick modulate state

# antispoof
antispoof quick for ($ext_if)

# Allow the services defined in the macros at the top of the file
pass in on $ext_if inet proto tcp from any to any port $tcp_services $tcp_state
pass in on $ext_if inet proto udp from any to any port $udp_services $udp_state

# Allow ICMP
pass inet proto icmp all icmp-type $icmp_types keep state
